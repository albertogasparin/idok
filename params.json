{"name":"Idok","tagline":"A simple command line to stream media to kodi (aka xbmc)","body":"What is it ?\r\n============\r\n\r\nIDOK (kodi reversed name) is a Go program that allows to serve medias to your Kodi plateform (raspbmc, xbmc...)\r\n\r\nYou may be able to send video, images and music from your computer.\r\n\r\nIdok has got two modes:\r\n\r\n* your computer serve media from a standard port (default 8080)\r\n* your computer dig a tunnel and serve media\r\n\r\nInstallation\r\n============\r\n\r\n## Install distribution\r\n\r\nLinux users can use the auto-install:\r\n\r\n\tbash <(wget https://github.com/metal3d/idok/releases/download/0.2.6/install-idok.sh -qO -)\r\n\r\nOr with curl:\r\n\r\n\tbash <(curl -L https://github.com/metal3d/idok/releases/download/0.2.6/install-idok.sh)\r\n\r\nCheck that ~/.local/bin is in your PATH. Then try to call:\r\n\r\n\tidok -h\r\n\r\nIf you want to get yourself the packed file for Linux, here are the urls:\r\n\r\n* https://github.com/metal3d/idok/releases/download/0.2.4/idok-i686.gz\r\n* https://github.com/metal3d/idok/releases/download/0.2.4/idok-x86_64.gz\r\n\r\n\r\n\r\nThat command could not work with MacOSX. You can get the gziped binary there: \r\nhttps://github.com/metal3d/idok/releases/download/0.2.4/idok-darwin.gz\r\n\r\nThen gunzip the binary:\r\n\r\n\tgunzip idok-darwin.gz\r\n\r\n(I need help for Mac because I don't have one and cannot be sure of how to install the command at the right path...)\r\n\r\nWindows users can get exe:\r\nhttps://github.com/metal3d/idok/releases/download/0.2.4/idok.zip\r\nThe \"idok.exe\" file should be launched from command line (cmd command). \r\n\r\nWindows users (again) may know that there is no graphical interface for the idok tool. Maybe one day...\r\n\r\nIf you have troubles, please fill an issue. But keep in mind that I don't have any Windows or Mac OSX installation. \r\n\r\nStream your first media\r\n=======================\r\n\r\n## Youtube URL\r\n\r\nThe simplier command is to open youtube url. Idok reoconize \"youtu.be\" and \"www.youtube.com\" hosts. Example:\r\n\r\n\tidok -target=raspbmc.local \"https://www.youtube.com/watch?v=o5snlP8Y5GY\"\r\n\r\nAs next command examples, pressing CTRL+C will stop video stream, and the command exits when video ends.\r\n\r\n**Note: you must enable youtube addon on your kodi/XBMC installation.**\r\n\r\n\r\n## HTTP (default)\r\n\r\nThe HTTP way is not secured. While you're streaming to Kodi (or XBMC), the media can be accessed by other computer in your network. That's not a big problem while you're not streaming important information (restricted video). \r\n\r\nThis solution need to open port on your firewall. \r\n\r\nBy default, idok opens 8080 port (http-alternative), but you can specify other port using \"-port\" option.\r\n\r\nAt first, you must be sure that the port is opened. To open firewall port on you linux installation:\r\n\r\n\tfirewall-cmd --add-port=8080/tcp\r\n\r\nWhen you will reload firewall, or restart computer, the port will be closed. If you want to keep that port opened:\r\n\r\n\tfirewall-cmd --add-port=8080/tcp --permanent\r\n\r\nThen, send media:\r\n\r\n\tidok -target=IP_OF_KODI_OR_XBMC /path/to/media.mp3\r\n\r\nIf you've opened other port, you can set it. For example for port 1234:\r\n\r\n\tidok -port=1234 -target=IP_OF_KODI_OR_XBMC /path/to/media.mp3\r\n\r\n\r\n## SSH\r\n\r\nThe SSH way is the easier and more secured way. Easier because you don't have to open port on your computer and only the Kodi instance will be able to access your content.\r\n\r\n\tidok -ssh -target=IP_OF_RASPBERRY /path/to/media.mp3\r\n\r\nYour kodi should open the file.\r\n\r\nPressing CTRL+C should stop media stream and exit program.\r\n\r\nWith SSH, idok tries to use your ssh key pair to authenticate. If it fails, it will use login/password to auth. So, there are 2 possibilities:\r\n\r\n* copy you public key to the kodi/xbmc host\r\n* set -sshuser (default is \"pi\") and -sshpass options\r\n\r\nTo copy you key, type this command:\r\n\r\n\tssh-copy-id USER@KODI_HOST\r\n\r\nWhere USER is the ssh kodi user (\"pi\" on raspbmc) and KODI_HOST is ip or hotname of the kodi host. By default, raspbmc use \"raspberry\" as password.\r\n\r\nNow, should should be able to stream media without the need of password.\r\n\r\n**Note: If you compiled yourself, remember to patch go.crypto/ssh package as explained above. Dropbear on raspbmc + crypto package are not compatibles without my patch**\r\n\r\nInstall from source\r\n===================\r\n\r\n**WARNING - Because there is a problem with dropbear ssh server on raspbmc, you should patch go.crypto/ssh package with the patched I made. See:\r\nhttps://code.google.com/p/go/issues/detail?id=8657**\r\n\r\nYou can clone repository and compile source code yourself:\r\n\r\n\tgit clone http://git.develipsum.com/metal3d/idok.git\r\n\tcd idok\r\n\tgo build idok.go\r\n\r\nThen you can put binary in your PATH:\r\n\r\n\tmkdir -p ~/.local/bin\r\n\tcp idok ~/.local/bin\r\n\r\nOptions\r\n=======\r\n\r\nThere are other options that may be usefull:\r\n\r\n* -target: kodi instance ip or hostname \r\n* -login : xbmc or kodi login configured on web interface settings\r\n* -password : xbmc or kodi password configured on web interface settings\r\n* -ssh : If set, idok will dig ssh tunnel to stream content\r\n* -sshuser : if you don't user \"pi\" user\r\n* -sshpass : if you changed standard password of \"pi\" user\r\n* -sshport : if you changed standard ssh port or to use other ssh server (default is 22)\r\n* -port : local port for media stream if you don't use ssh tunneling, default is 8080\r\n\r\nTODO\r\n====\r\n\r\nI should ask dropbear maintainer why the tunneling won't work. Installing openssh-server on raspbmc can be complicated for some users.\r\n\r\nAdd kodi/xbmc port option (some users changed the default 80) \r\n\r\nChangeLog\r\n=========\r\n\r\n* 0.2.6\r\n  - fix issue #1 (reported at http://forum.xbmc.org/showthread.php?tid=203834)\r\n  - Now, if idok wait reponse to check playing status\r\n  - Add DSA key managment\r\n  - Add some information in -verion option\r\n\r\n* 0.2.4\r\n  - Add youtube url support\r\n\r\n* 0.2.2\r\n  - Make use of SSH key pair\r\n  - Fixed standard ssh tunnel on dropbear server https://code.google.com/p/go/issues/detail?id=8657\r\n  - Fix randomized port for dropbear based ssh server\r\n","google":"UA-54490082-1","note":"Don't delete this file! It's used internally to help with page regeneration."}